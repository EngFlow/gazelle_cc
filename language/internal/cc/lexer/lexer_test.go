// Copyright 2025 EngFlow Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package lexer

import (
	_ "embed"
	"slices"
	"strings"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestLexer(t *testing.T) {
	testCases := []struct {
		testCaseName   string
		input          string
		expectedTokens []Token
		expectedError  error
	}{
		{
			testCaseName:   "empty source",
			input:          "",
			expectedTokens: nil,
			expectedError:  nil,
		},
		{
			testCaseName: "only main function",
			input:        "int main() { return 0; }",
			expectedTokens: []Token{
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 1}, Content: "int"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 1, Column: 4}, Content: " "},
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 5}, Content: "main"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 9}, Content: "("},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 10}, Content: ")"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 1, Column: 11}, Content: " "},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 12}, Content: "{"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 1, Column: 13}, Content: " "},
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 14}, Content: "return"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 1, Column: 20}, Content: " "},
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 21}, Content: "0"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 22}, Content: ";"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 1, Column: 23}, Content: " "},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 24}, Content: "}"},
			},
			expectedError: nil,
		},
		{
			testCaseName: "fake main function in a comment",
			input:        "/*\nint main() { return 0; }\n*/\nint main() { return 0; }",
			expectedTokens: []Token{
				{Type: TokenType_MultiLineComment, Location: Cursor{Line: 1, Column: 1}, Content: "/*\nint main() { return 0; }\n*/"},
				{Type: TokenType_Newline, Location: Cursor{Line: 3, Column: 3}, Content: "\n"},
				{Type: TokenType_Word, Location: Cursor{Line: 4, Column: 1}, Content: "int"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 4, Column: 4}, Content: " "},
				{Type: TokenType_Word, Location: Cursor{Line: 4, Column: 5}, Content: "main"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 4, Column: 9}, Content: "("},
				{Type: TokenType_Symbol, Location: Cursor{Line: 4, Column: 10}, Content: ")"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 4, Column: 11}, Content: " "},
				{Type: TokenType_Symbol, Location: Cursor{Line: 4, Column: 12}, Content: "{"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 4, Column: 13}, Content: " "},
				{Type: TokenType_Word, Location: Cursor{Line: 4, Column: 14}, Content: "return"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 4, Column: 20}, Content: " "},
				{Type: TokenType_Word, Location: Cursor{Line: 4, Column: 21}, Content: "0"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 4, Column: 22}, Content: ";"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 4, Column: 23}, Content: " "},
				{Type: TokenType_Symbol, Location: Cursor{Line: 4, Column: 24}, Content: "}"},
			},
			expectedError: nil,
		},
		{
			testCaseName: "multiline #define directive",
			input:        "#define SQUARE(x)\\\n((x)*(x))",
			expectedTokens: []Token{
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 1}, Content: "#define"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 1, Column: 8}, Content: " "},
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 9}, Content: "SQUARE"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 15}, Content: "("},
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 16}, Content: "x"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 17}, Content: ")"},
				{Type: TokenType_ContinueLine, Location: Cursor{Line: 1, Column: 18}, Content: "\\\n"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 2, Column: 1}, Content: "("},
				{Type: TokenType_Symbol, Location: Cursor{Line: 2, Column: 2}, Content: "("},
				{Type: TokenType_Word, Location: Cursor{Line: 2, Column: 3}, Content: "x"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 2, Column: 4}, Content: ")"},
				{Type: TokenType_Word, Location: Cursor{Line: 2, Column: 5}, Content: "*"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 2, Column: 6}, Content: "("},
				{Type: TokenType_Word, Location: Cursor{Line: 2, Column: 7}, Content: "x"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 2, Column: 8}, Content: ")"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 2, Column: 9}, Content: ")"},
			},
			expectedError: nil,
		},
		{
			testCaseName: "unterminated multiline comment",
			input:        "int main() { /*\n return 0; }",
			expectedTokens: []Token{
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 1}, Content: "int"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 1, Column: 4}, Content: " "},
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 5}, Content: "main"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 9}, Content: "("},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 10}, Content: ")"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 1, Column: 11}, Content: " "},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 12}, Content: "{"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 1, Column: 13}, Content: " "},
			},
			expectedError: ErrMultiLineCommentUnterminated,
		},
		{
			testCaseName: "fake include directive in a string literal",
			input:        `const char *str = "#include <iostream>";`,
			expectedTokens: []Token{
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 1}, Content: "const"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 1, Column: 6}, Content: " "},
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 7}, Content: "char"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 1, Column: 11}, Content: " "},
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 12}, Content: "*str"},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 1, Column: 16}, Content: " "},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 17}, Content: "="},
				{Type: TokenType_Whitespace, Location: Cursor{Line: 1, Column: 18}, Content: " "},
				{Type: TokenType_StringLiteral, Location: Cursor{Line: 1, Column: 19}, Content: `"#include <iostream>"`},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 40}, Content: ";"},
			},
			expectedError: nil,
		},
	}

	for _, tc := range testCases {
		lexer := NewLexer(strings.NewReader(tc.input))
		tokens := slices.Collect(AllTokens(lexer))
		err := lexer.Err()
		assert.Equal(t, tc.expectedTokens, tokens, "test case: %s", tc.testCaseName)
		assert.ErrorIs(t, err, tc.expectedError, "test case: %s", tc.testCaseName)
	}
}

var (
	//go:embed testdata/string_literals.cpp
	embedInput_stringLiterals string

	//go:embed testdata/mbedtls_config.h
	embedInput_mbedtlsConfig string
)

func TestFilteredLexer(t *testing.T) {
	testCases := []struct {
		testCaseName   string
		input          string
		allowList      TokenTypeSet
		expectedTokens []Token
		expectedError  error
	}{
		{
			testCaseName: "string literals",
			allowList:    NewTokenTypeSet(TokenType_Symbol, TokenType_SingleLineComment, TokenType_StringLiteral, TokenType_RawStringLiteral, TokenType_Word),
			input:        embedInput_stringLiterals,
			expectedTokens: []Token{
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 1}, Content: "#include"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 10}, Content: "<"},
				{Type: TokenType_Word, Location: Cursor{Line: 1, Column: 11}, Content: "iostream"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 1, Column: 19}, Content: ">"},
				{Type: TokenType_Word, Location: Cursor{Line: 2, Column: 1}, Content: "#include"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 2, Column: 10}, Content: "<"},
				{Type: TokenType_Word, Location: Cursor{Line: 2, Column: 11}, Content: "string"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 2, Column: 17}, Content: ">"},
				{Type: TokenType_Word, Location: Cursor{Line: 4, Column: 1}, Content: "namespace"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 4, Column: 11}, Content: "{"},
				{Type: TokenType_Word, Location: Cursor{Line: 6, Column: 1}, Content: "const"},
				{Type: TokenType_Word, Location: Cursor{Line: 6, Column: 7}, Content: "std::string"},
				{Type: TokenType_Word, Location: Cursor{Line: 6, Column: 19}, Content: "STR"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 6, Column: 22}, Content: "{"},
				{Type: TokenType_StringLiteral, Location: Cursor{Line: 6, Column: 23}, Content: `"#include <fmt/core.h>"`},
				{Type: TokenType_Symbol, Location: Cursor{Line: 6, Column: 46}, Content: "}"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 6, Column: 47}, Content: ";"},
				{Type: TokenType_Word, Location: Cursor{Line: 7, Column: 1}, Content: "const"},
				{Type: TokenType_Word, Location: Cursor{Line: 7, Column: 7}, Content: "std::wstring"},
				{Type: TokenType_Word, Location: Cursor{Line: 7, Column: 20}, Content: "WSTR"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 7, Column: 24}, Content: "{"},
				{Type: TokenType_Word, Location: Cursor{Line: 7, Column: 25}, Content: "L"},
				{Type: TokenType_StringLiteral, Location: Cursor{Line: 7, Column: 26}, Content: `"Hello, world! 😎😎😎"`},
				{Type: TokenType_Symbol, Location: Cursor{Line: 7, Column: 45}, Content: "}"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 7, Column: 46}, Content: ";"},
				{Type: TokenType_SingleLineComment, Location: Cursor{Line: 7, Column: 48}, Content: "// This comment starts at line 7, column 48"},
				{Type: TokenType_Word, Location: Cursor{Line: 9, Column: 1}, Content: "const"},
				{Type: TokenType_Word, Location: Cursor{Line: 9, Column: 7}, Content: "std::string"},
				{Type: TokenType_Word, Location: Cursor{Line: 9, Column: 19}, Content: "RAW_STR"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 9, Column: 26}, Content: "{"},
				{Type: TokenType_RawStringLiteral, Location: Cursor{Line: 9, Column: 27}, Content: "R\"delim(\nThis is a raw string.\n)delim\""},
				{Type: TokenType_Symbol, Location: Cursor{Line: 11, Column: 8}, Content: "}"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 11, Column: 9}, Content: ";"},
				{Type: TokenType_Symbol, Location: Cursor{Line: 13, Column: 1}, Content: "}"},
				{Type: TokenType_SingleLineComment, Location: Cursor{Line: 13, Column: 3}, Content: "// namespace"},
			},
			expectedError: nil,
		},
		{
			testCaseName: "mbedtls config with long comments",
			input:        embedInput_mbedtlsConfig,
			allowList:    NewTokenTypeSet(TokenType_Symbol, TokenType_Word),
			expectedTokens: []Token{
				{Type: TokenType_Word, Location: Cursor{Line: 52, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 52, Column: 9}, Content: "MBEDTLS_HAVE_ASM"},
				{Type: TokenType_Word, Location: Cursor{Line: 131, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 131, Column: 9}, Content: "MBEDTLS_HAVE_TIME"},
				{Type: TokenType_Word, Location: Cursor{Line: 152, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 152, Column: 9}, Content: "MBEDTLS_HAVE_TIME_DATE"},
				{Type: TokenType_Word, Location: Cursor{Line: 653, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 653, Column: 9}, Content: "MBEDTLS_CIPHER_MODE_CBC"},
				{Type: TokenType_Word, Location: Cursor{Line: 660, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 660, Column: 9}, Content: "MBEDTLS_CIPHER_MODE_CFB"},
				{Type: TokenType_Word, Location: Cursor{Line: 667, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 667, Column: 9}, Content: "MBEDTLS_CIPHER_MODE_CTR"},
				{Type: TokenType_Word, Location: Cursor{Line: 674, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 674, Column: 9}, Content: "MBEDTLS_CIPHER_MODE_OFB"},
				{Type: TokenType_Word, Location: Cursor{Line: 681, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 681, Column: 9}, Content: "MBEDTLS_CIPHER_MODE_XTS"},
				{Type: TokenType_Word, Location: Cursor{Line: 726, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 726, Column: 9}, Content: "MBEDTLS_CIPHER_PADDING_PKCS7"},
				{Type: TokenType_Word, Location: Cursor{Line: 727, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 727, Column: 9}, Content: "MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS"},
				{Type: TokenType_Word, Location: Cursor{Line: 728, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 728, Column: 9}, Content: "MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN"},
				{Type: TokenType_Word, Location: Cursor{Line: 729, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 729, Column: 9}, Content: "MBEDTLS_CIPHER_PADDING_ZEROS"},
				{Type: TokenType_Word, Location: Cursor{Line: 784, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 784, Column: 9}, Content: "MBEDTLS_ECP_NIST_OPTIM"},
				{Type: TokenType_Word, Location: Cursor{Line: 861, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 861, Column: 9}, Content: "MBEDTLS_ECDSA_DETERMINISTIC"},
				{Type: TokenType_Word, Location: Cursor{Line: 881, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 881, Column: 9}, Content: "MBEDTLS_KEY_EXCHANGE_PSK_ENABLED"},
				{Type: TokenType_Word, Location: Cursor{Line: 910, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 910, Column: 9}, Content: "MBEDTLS_KEY_EXCHANGE_DHE_PSK_ENABLED"},
				{Type: TokenType_Word, Location: Cursor{Line: 951, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 951, Column: 9}, Content: "MBEDTLS_KEY_EXCHANGE_RSA_PSK_ENABLED"},
				{Type: TokenType_Word, Location: Cursor{Line: 976, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 976, Column: 9}, Content: "MBEDTLS_KEY_EXCHANGE_RSA_ENABLED"},
				{Type: TokenType_Word, Location: Cursor{Line: 1008, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1008, Column: 9}, Content: "MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED"},
				{Type: TokenType_Word, Location: Cursor{Line: 1142, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1142, Column: 9}, Content: "MBEDTLS_PK_PARSE_EC_EXTENDED"},
				{Type: TokenType_Word, Location: Cursor{Line: 1155, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1155, Column: 9}, Content: "MBEDTLS_PK_PARSE_EC_COMPRESSED"},
				{Type: TokenType_Word, Location: Cursor{Line: 1170, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1170, Column: 9}, Content: "MBEDTLS_ERROR_STRERROR_DUMMY"},
				{Type: TokenType_Word, Location: Cursor{Line: 1179, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1179, Column: 9}, Content: "MBEDTLS_GENPRIME"},
				{Type: TokenType_Word, Location: Cursor{Line: 1186, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1186, Column: 9}, Content: "MBEDTLS_FS_IO"},
				{Type: TokenType_Word, Location: Cursor{Line: 1299, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1299, Column: 9}, Content: "MBEDTLS_PK_RSA_ALT_SUPPORT"},
				{Type: TokenType_Word, Location: Cursor{Line: 1310, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1310, Column: 9}, Content: "MBEDTLS_PKCS1_V15"},
				{Type: TokenType_Word, Location: Cursor{Line: 1324, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1324, Column: 9}, Content: "MBEDTLS_PKCS1_V21"},
				{Type: TokenType_Word, Location: Cursor{Line: 1487, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1487, Column: 9}, Content: "MBEDTLS_SELF_TEST"},
				{Type: TokenType_Word, Location: Cursor{Line: 1527, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1527, Column: 9}, Content: "MBEDTLS_SSL_ALL_ALERT_MESSAGES"},
				{Type: TokenType_Word, Location: Cursor{Line: 1551, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1551, Column: 9}, Content: "MBEDTLS_SSL_DTLS_CONNECTION_ID"},
				{Type: TokenType_Word, Location: Cursor{Line: 1574, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1574, Column: 9}, Content: "MBEDTLS_SSL_DTLS_CONNECTION_ID_COMPAT"},
				{Type: TokenType_Word, Location: Cursor{Line: 1574, Column: 47}, Content: "0"},
				{Type: TokenType_Word, Location: Cursor{Line: 1647, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1647, Column: 9}, Content: "MBEDTLS_SSL_ENCRYPT_THEN_MAC"},
				{Type: TokenType_Word, Location: Cursor{Line: 1663, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1663, Column: 9}, Content: "MBEDTLS_SSL_EXTENDED_MASTER_SECRET"},
				{Type: TokenType_Word, Location: Cursor{Line: 1687, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1687, Column: 9}, Content: "MBEDTLS_SSL_KEEP_PEER_CERTIFICATE"},
				{Type: TokenType_Word, Location: Cursor{Line: 1711, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1711, Column: 9}, Content: "MBEDTLS_SSL_RENEGOTIATION"},
				{Type: TokenType_Word, Location: Cursor{Line: 1720, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1720, Column: 9}, Content: "MBEDTLS_SSL_MAX_FRAGMENT_LENGTH"},
				{Type: TokenType_Word, Location: Cursor{Line: 1753, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1753, Column: 9}, Content: "MBEDTLS_SSL_PROTO_TLS1_2"},
				{Type: TokenType_Word, Location: Cursor{Line: 1811, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1811, Column: 9}, Content: "MBEDTLS_SSL_TLS1_3_KEY_EXCHANGE_MODE_PSK_ENABLED"},
				{Type: TokenType_Word, Location: Cursor{Line: 1877, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1877, Column: 9}, Content: "MBEDTLS_SSL_PROTO_DTLS"},
				{Type: TokenType_Word, Location: Cursor{Line: 1886, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1886, Column: 9}, Content: "MBEDTLS_SSL_ALPN"},
				{Type: TokenType_Word, Location: Cursor{Line: 1901, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1901, Column: 9}, Content: "MBEDTLS_SSL_DTLS_ANTI_REPLAY"},
				{Type: TokenType_Word, Location: Cursor{Line: 1919, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1919, Column: 9}, Content: "MBEDTLS_SSL_DTLS_HELLO_VERIFY"},
				{Type: TokenType_Word, Location: Cursor{Line: 1966, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1966, Column: 9}, Content: "MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE"},
				{Type: TokenType_Word, Location: Cursor{Line: 1980, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1980, Column: 9}, Content: "MBEDTLS_SSL_SESSION_TICKETS"},
				{Type: TokenType_Word, Location: Cursor{Line: 1991, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 1991, Column: 9}, Content: "MBEDTLS_SSL_SERVER_NAME_INDICATION"},
				{Type: TokenType_Word, Location: Cursor{Line: 2154, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2154, Column: 9}, Content: "MBEDTLS_VERSION_FEATURES"},
				{Type: TokenType_Word, Location: Cursor{Line: 2198, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2198, Column: 9}, Content: "MBEDTLS_X509_RSASSA_PSS_SUPPORT"},
				{Type: TokenType_Word, Location: Cursor{Line: 2238, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2238, Column: 9}, Content: "MBEDTLS_AESNI_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2264, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2264, Column: 9}, Content: "MBEDTLS_AESCE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2339, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2339, Column: 9}, Content: "MBEDTLS_AES_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2353, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2353, Column: 9}, Content: "MBEDTLS_ASN1_PARSE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2367, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2367, Column: 9}, Content: "MBEDTLS_ASN1_WRITE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2379, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2379, Column: 9}, Content: "MBEDTLS_BASE64_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2421, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2421, Column: 9}, Content: "MBEDTLS_BIGNUM_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2476, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2476, Column: 9}, Content: "MBEDTLS_CAMELLIA_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2528, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2528, Column: 9}, Content: "MBEDTLS_ARIA_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2552, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2552, Column: 9}, Content: "MBEDTLS_CHACHA20_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2563, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2563, Column: 9}, Content: "MBEDTLS_CHACHAPOLY_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2587, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2587, Column: 9}, Content: "MBEDTLS_CIPHER_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2605, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2605, Column: 9}, Content: "MBEDTLS_CMAC_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2636, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2636, Column: 9}, Content: "MBEDTLS_CTR_DRBG_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2651, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2651, Column: 9}, Content: "MBEDTLS_DEBUG_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2667, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2667, Column: 9}, Content: "MBEDTLS_DES_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2689, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2689, Column: 9}, Content: "MBEDTLS_DHM_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2707, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2707, Column: 9}, Content: "MBEDTLS_ECDH_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2746, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2746, Column: 9}, Content: "MBEDTLS_ECJPAKE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2760, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2760, Column: 9}, Content: "MBEDTLS_ECP_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2774, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2774, Column: 9}, Content: "MBEDTLS_ENTROPY_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2786, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2786, Column: 9}, Content: "MBEDTLS_ERROR_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2816, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2816, Column: 9}, Content: "MBEDTLS_HKDF_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2830, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2830, Column: 9}, Content: "MBEDTLS_HMAC_DRBG_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2869, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2869, Column: 9}, Content: "MBEDTLS_NIST_KW_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2902, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2902, Column: 9}, Content: "MBEDTLS_MD_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2923, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2923, Column: 9}, Content: "MBEDTLS_MD5_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2958, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2958, Column: 9}, Content: "MBEDTLS_NET_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2981, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2981, Column: 9}, Content: "MBEDTLS_OID_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 2995, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 2995, Column: 9}, Content: "MBEDTLS_PADLOCK_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3017, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3017, Column: 9}, Content: "MBEDTLS_PEM_PARSE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3033, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3033, Column: 9}, Content: "MBEDTLS_PEM_WRITE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3051, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3051, Column: 9}, Content: "MBEDTLS_PK_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3066, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3066, Column: 9}, Content: "MBEDTLS_PK_PARSE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3080, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3080, Column: 9}, Content: "MBEDTLS_PK_WRITE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3096, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3096, Column: 9}, Content: "MBEDTLS_PKCS5_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3112, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3112, Column: 9}, Content: "MBEDTLS_PKCS7_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3131, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3131, Column: 9}, Content: "MBEDTLS_PKCS12_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3151, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3151, Column: 9}, Content: "MBEDTLS_PLATFORM_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3161, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3161, Column: 9}, Content: "MBEDTLS_POLY1305_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3177, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3177, Column: 9}, Content: "MBEDTLS_PSA_CRYPTO_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3206, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3206, Column: 9}, Content: "MBEDTLS_PSA_CRYPTO_STORAGE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3218, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3218, Column: 9}, Content: "MBEDTLS_PSA_ITS_FILE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3229, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3229, Column: 9}, Content: "MBEDTLS_RIPEMD160_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3249, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3249, Column: 9}, Content: "MBEDTLS_RSA_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3268, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3268, Column: 9}, Content: "MBEDTLS_SHA1_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3281, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3281, Column: 9}, Content: "MBEDTLS_SHA224_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3298, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3298, Column: 9}, Content: "MBEDTLS_SHA256_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3396, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3396, Column: 9}, Content: "MBEDTLS_SHA384_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3411, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3411, Column: 9}, Content: "MBEDTLS_SHA512_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3422, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3422, Column: 9}, Content: "MBEDTLS_SHA3_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3490, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3490, Column: 9}, Content: "MBEDTLS_SSL_CACHE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3500, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3500, Column: 9}, Content: "MBEDTLS_SSL_COOKIE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3527, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3527, Column: 9}, Content: "MBEDTLS_SSL_CLI_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3541, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3541, Column: 9}, Content: "MBEDTLS_SSL_SRV_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3557, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3557, Column: 9}, Content: "MBEDTLS_SSL_TLS_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3603, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3603, Column: 9}, Content: "MBEDTLS_TIMING_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3614, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3614, Column: 9}, Content: "MBEDTLS_VERSION_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3634, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3634, Column: 9}, Content: "MBEDTLS_X509_USE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3650, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3650, Column: 9}, Content: "MBEDTLS_X509_CRT_PARSE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3664, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3664, Column: 9}, Content: "MBEDTLS_X509_CRL_PARSE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3678, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3678, Column: 9}, Content: "MBEDTLS_X509_CSR_PARSE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3695, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3695, Column: 9}, Content: "MBEDTLS_X509_CREATE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3708, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3708, Column: 9}, Content: "MBEDTLS_X509_CRT_WRITE_C"},
				{Type: TokenType_Word, Location: Cursor{Line: 3721, Column: 1}, Content: "#define"},
				{Type: TokenType_Word, Location: Cursor{Line: 3721, Column: 9}, Content: "MBEDTLS_X509_CSR_WRITE_C"},
			},
			expectedError: nil,
		},
	}

	for _, tc := range testCases {
		lexer := NewFilteredLexer(NewLexer(strings.NewReader(tc.input)), tc.allowList)
		tokens := slices.Collect(AllTokens(lexer))
		err := lexer.Err()
		assert.Equal(t, tc.expectedTokens, tokens, "test case: %s", tc.testCaseName)
		assert.ErrorIs(t, err, tc.expectedError, "test case: %s", tc.testCaseName)
	}
}
